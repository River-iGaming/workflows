name: Publish Docker Image to ECR


on:
  workflow_call:
    inputs:
      dotnet-version:
        description: dotnet version to use (defaults to 5.0.x)
        required: false
        type: string
        default: '5.0.x'
      publish:
        description: whether the docker image should be pushed
        required: false
        type: boolean
        default: false
      aws-region:
        description: Which AWS region to use for publish storybook (defaults to eu-west-1)
        required: false
        type: string
        default: eu-west-1
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true


jobs:
  create-and-push-container-image:
    name: "Create and Push Container Image to ECR"
    runs-on: ubuntu-latest
    env: 
      DOTNET_CLI_TELEMETRY_OPTOUT: "1"
      PUBLISH_PATH: obj/Docker/publish
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: ${{ inputs.aws-region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        if: ${{ inputs.publish }}
        env:
          ECR_HOST: ${{ steps.login-ecr.outputs.registry }}          
          GIT_COMMIT: ${{ github.sha }}          
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.override.yml -f docker-compose.ci.yml build
          docker-compose -f docker-compose.yml -f docker-compose.override.yml -f docker-compose.ci.yml push
          
          echo "::notice::Pushed image for $APP_NAME: $APP_VERSION" 

      - name: Logout of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
