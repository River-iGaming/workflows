name: Downmerge releases

on:
  workflow_call:
    secrets:
      github-token:
        required: true

jobs:
  checks:
    name: Downmerge to develop and release branches
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.github-token }}

      - name: Downmerge
        run: |
          git fetch
          git config user.email "deploy-bot@riverigaming.com"
          git config user.name "rig-autobot"

          # Determine the current package version
          BASE_PACKAGE_VERSION=$(node -p "require('./package.json').version")

          # Extract the major and minor version from the current version
          MAJOR_VERSION=$(echo $BASE_PACKAGE_VERSION | cut -d'.' -f1)
          MINOR_VERSION=$(echo $BASE_PACKAGE_VERSION | cut -d'.' -f2)

          CURRENT_BRANCH="$(git branch --show-current)"

          # Iterate through branches and downmerge if they match the pattern
          for branch in $(git for-each-ref --format='%(refname:short)' 'refs/remotes/origin/release/*' 'refs/remotes/origin/develop'); do
            BRANCH_VERSION=$(echo $branch | cut -d'/' -f3)
            MAJOR_MINOR_BRANCH_VERSION=$(echo $BRANCH_VERSION | cut -d'.' -f1,2)
            MAJOR_MINOR_PACKAGE_VERSION=$(echo $BASE_PACKAGE_VERSION | cut -d'.' -f1,2)
            branch="${branch#origin/}"

            if [[ $branch == "develop" || $MAJOR_MINOR_BRANCH_VERSION > $MAJOR_MINOR_PACKAGE_VERSION ]]; then
              echo "::notice ::Downmerging branch: $branch from: $CURRENT_BRANCH"

              git checkout $branch

              # Merge changes from the remote branch into branch
              if git merge --no-commit --no-ff --no-edit ${CURRENT_BRANCH}; then
                if [ -z "$(git status --porcelain)" ]; then
                  echo "::notice ::Nothing to commit for branch: $branch"
                else
                  git commit --no-edit
                  git push origin $branch
                fi
              else
                  CONFLICTS="$(git diff --name-only --diff-filter=U)"

                  for file in $CONFLICTS; do
                    echo "::notice ::Conflicts: $CONFLICTS"
                    if [ "$file" == "package.json" ]; then
                        echo "::notice ::Auto-resolving package.json version conflicts by choosing the HEAD version."
                        git checkout --theirs package.json
                        git add package.json
                        git commit -m "chore(*): auto-resolve package.json version conflicts"
                        git push origin $branch

                        echo "::warning ::Auto merged package.json version conflicts. Please review the changes manually."
                    else
                      echo "::warning ::Failed to downmerge to branch: $branch. Merge error."
                    fi
                  done
              fi
            fi
          done
