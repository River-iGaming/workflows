name: Downmerge releases

on:
  workflow_call:
    inputs:
        base-branch:
          description: Base branch of the repo to downmerge to
          required: false
          type: string
          default: "master"
        commit-types:
          description: Allowed commit types for downmerge
          required: false
          type: string
          default: |
            feat
            fix
            release
        conflict-auto-keep-files:
          description: 'Files where merge conflicts are automatically resolved by keeping the target branch version'
          required: false
          type: string
          default: |
            package.json
            pnpm-lock.yaml
    secrets:
      github-token:
        required: true
concurrency:
  group: ${{ github.workflow }}

jobs:
  check-allowed:
    name: Check if Downmerge is allowed
    runs-on: ubuntu-latest
    steps:
      - name: Check if Commit Type is Allowed
        id: check-commit-type
        uses: River-iGaming/actions/commit-type-check@v4
        with:
          commit-types: ${{ inputs.commit-types }}
          github-token: ${{ secrets.github-token }}

  get-branches:
    name: Get Branches for Downmerge
    needs: check-allowed
    runs-on: ubuntu-latest
    outputs:
      downmerge-branches: ${{ steps.get-branches.outputs.downmerge-branches }}
      current-branch: ${{ steps.get-branches.outputs.current-branch }}
    steps:  
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.github-token }}

      - name: Get Branches
        id: get-branches
        run: |
          git fetch

          # Determine the current branch and package version
          BASE_BRANCH="${{ inputs.base-branch }}"
          CURRENT_BRANCH="$(git branch --show-current)"

          if [[ "$CURRENT_BRANCH" =~ "release" ]]; then
            BASE_PACKAGE_VERSION=$(echo $CURRENT_BRANCH | cut -d'/' -f2)
          else
            BASE_PACKAGE_VERSION=$(jq -r '.version' package.json)
          fi

          # Get a list of branches for downmerge
          BRANCHES=$(git for-each-ref --format='%(refname:short)' 'refs/remotes/origin/release/*' "refs/remotes/origin/$BASE_BRANCH")
          DOWNMERGE_BRANCHES=()
          for branch in $BRANCHES; do
            branch="${branch#origin/}" # Remove the 'origin/' prefix
            BRANCH_VERSION=$(echo $branch | cut -d'/' -f2)
            NEWER_VERSION="$(printf '%s\n' "$BRANCH_VERSION" "$BASE_PACKAGE_VERSION" | sort -V | tail -n 1)"

            if [[ $branch == $BASE_BRANCH || ($NEWER_VERSION == $BRANCH_VERSION && "$BRANCH_VERSION" != "$BASE_PACKAGE_VERSION") ]]; then
              DOWNMERGE_BRANCHES+=("$branch")
            fi
          done

          echo "::notice::Branches to merge: ${DOWNMERGE_BRANCHES[*]}"

          BRANCHES=$(printf '%s\n' "${DOWNMERGE_BRANCHES[@]}" | jq -R . | jq -cs .)
          echo "downmerge-branches=$(IFS=', '; echo "${BRANCHES[*]}")" >> "$GITHUB_OUTPUT"
          echo "current-branch=$CURRENT_BRANCH" >> $GITHUB_OUTPUT
  downmerge:
    name: Downmerge to ${{ matrix.branch }}
    needs: get-branches
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        branch: ${{ fromJson(needs.get-branches.outputs.downmerge-branches) }}
    steps:
      - name: Merge ${{ needs.get-branches.outputs.current-branch }} into ${{ matrix.branch }}
        id: downmerge
        uses: River-iGaming/actions/merge-branch@v4
        with:
          source-branch: ${{ needs.get-branches.outputs.current-branch }}
          target-branch: ${{ matrix.branch }}
          conflict-auto-keep-files: ${{ inputs.conflict-auto-keep-files }}
          github-token: ${{ secrets.github-token }}
      - name: Failed Merge Notification
        if: ${{ steps.downmerge.outputs.merge-failed == 'true' }}
        run: |
            echo "::error::❌ Merge failed. Review logs manually."
            exit 1
      - name: Auto-resolve Merge Notification
        if: ${{ steps.downmerge.outputs.auto-resolved == 'true' }}
        run: |
            echo "::error::⚠️ Auto merged conflicts. Review Changes Manually."
            exit 1
